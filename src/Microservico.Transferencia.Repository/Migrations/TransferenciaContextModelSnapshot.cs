// <auto-generated />
using System;
using Microservico.Transferencia.Repository.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Microservico.Transferencia.Repository.Migrations
{
    [DbContext(typeof(TransferenciaContext))]
    partial class TransferenciaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microservico.Transferencia.Domain.Models.ContaCorrente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Saldo");

                    b.HasKey("Id");

                    b.ToTable("ContaCorrentes");
                });

            modelBuilder.Entity("Microservico.Transferencia.Domain.Models.Lancamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ContaDestinoId");

                    b.Property<int?>("ContaOrigemId");

                    b.Property<DateTime>("DataLancamento");

                    b.Property<double>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("ContaDestinoId");

                    b.HasIndex("ContaOrigemId");

                    b.ToTable("Lancamentos");
                });

            modelBuilder.Entity("Microservico.Transferencia.Domain.Models.Lancamento", b =>
                {
                    b.HasOne("Microservico.Transferencia.Domain.Models.ContaCorrente", "ContaDestino")
                        .WithMany()
                        .HasForeignKey("ContaDestinoId");

                    b.HasOne("Microservico.Transferencia.Domain.Models.ContaCorrente", "ContaOrigem")
                        .WithMany()
                        .HasForeignKey("ContaOrigemId");
                });
#pragma warning restore 612, 618
        }
    }
}
